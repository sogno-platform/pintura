name: package build workflow
# https://www.patriksvensson.se/2020/03/creating-release-artifacts-with-github-actions/
# https://github.community/t5/GitHub-Actions/Using-on-push-tags-ignore-and-paths-ignore-together/td-p/38559
# https://github.com/softprops/action-gh-release
# https://github.com/actions/download-artifact

on:
  push:
    tags:
      - 'release-v*'

jobs:
  package:
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    name: A job to build the packages
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get version info
      id:   version
      run:  echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/release-}
    - name: Check release is correct
      run: grep ${{ steps.version.outputs.VERSION }} index.html
    - name: NPM
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run release --if-present
      # TODO: tests need to be rewritten
      # since the component files were
      # deleted from grid-data
      #- run: npm test
    - name: UploadCimsvg
      uses: actions/upload-artifact@v2
      with:
        name: cimsvglib
        path: ${{ github.workspace }}/dist/libcimsvg.js
    - name: Upload Cimmenu
      uses: actions/upload-artifact@v2
      with:
        name: cimmenulib
        path: ${{ github.workspace }}/dist/libcimmenu.js
    - name: Rename Release
      run: cp ${{ github.workspace }}/dist/release.tgz ${{ github.workspace }}/dist/pintura-${{ steps.version.outputs.VERSION }}.tgz
    - name: Upload Release
      uses: actions/upload-artifact@v2
      with:
        name: bundle
        path: ${{ github.workspace }}/dist/pintura-${{ steps.version.outputs.VERSION }}.tgz
  release:
    needs: package
    runs-on: ubuntu-latest
    steps:
    - name: GetArtifact
      uses: actions/download-artifact@v2
    - name: Display structure of downloaded files
      run: ls -l /home/runner/work/pintura/pintura
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bundle/pintura-*.tgz
          cimsvglib/*
          cimmenulib/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get version info
      id:   version
      run:  echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/release-}
    - name: Build Docker
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_NAME }}
        password: ${{ secrets.DOCKER_HUB_PASS }}
        repository: rwthacs/pintura
        tags: latest, ${{ steps.version.outputs.VERSION }}
